{"version":3,"sources":["components/Header/Header.jsx","actions/types.js","actions/getSearch.js","components/Spinner/Spinner.jsx","components/Search/FoundTracks/FoundTracks.jsx","components/Search/Search.jsx","components/Home/Music/SongCard/SongCard.jsx","components/Home/Music/Music.jsx","actions/getTopTkacks.js","components/Home/Home.jsx","actions/getArtistInfo.js","components/Artist/Artist.jsx","components/Footer/Footer.jsx","App.jsx","reducers/musicReducer.js","reducers/artistReducer.js","reducers/searchReducer.js","reducers/allRedusers.js","index.jsx"],"names":["Header","className","src","alt","to","exact","activeClassName","START_LOAD_TOP_TRACKS","LOADED_TOP_TRACKS","ERROR_TOP_TRACKS","START_LOAD_ARTIST_INFO","LOADED_ARTIST_INFO","ERROR_ARTIST_INFO","START_LOAD_SEARCH","LOADED_SEARCH","ERROR_SEARCH","getDataStarted","type","getDataSuccess","data","payload","getDataFailure","error","Spinner","FoundTracks","foundTracks","loading","hasOwnProperty","track","map","href","url","name","artist","uuidv4","connect","state","dispatch","getSearch","fetch","then","response","ok","json","Error","res","catch","err","message","location","useLocation","urlSearchParam","URLSearchParams","search","history","useHistory","useState","get","inputValue","setInputValue","useEffect","debounceSearchParams","useCallback","debounce","value","placeholder","onChange","event","target","set","delete","push","toString","pushUrlSearchParam","replaceAll","SongCard","song","image","replace","Music","listSongs","music","getTopTracks","info","getArtistInfo","props","match","params","artistName","tags","tag","dangerouslySetInnerHTML","__html","bio","content","Footer","App","path","component","Home","Search","Artist","initialState","combineReducers","action","tracks","results","trackmatches","store","createStore","applyMiddleware","thunk","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d9a5ce5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo\">\r\n                <img\r\n                    src=\"./img/icons/header/logo.jpg\"\r\n                    alt=\"logo\"\r\n                    className=\"header__img\"\r\n                />\r\n            </div>\r\n\r\n            <ul className=\"header__link-list link__list\">\r\n                <li className=\"link__item\">\r\n                    <NavLink\r\n                        to=\"/\"\r\n                        exact\r\n                        className=\"link__routing-link\"\r\n                        activeClassName=\"link__disabled\"\r\n                    >\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className=\"link__item\">\r\n                    <NavLink\r\n                        to=\"/search\"\r\n                        exact\r\n                        className=\"link__routing-link\"\r\n                        activeClassName=\"link__disabled\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export const START_LOAD_TOP_TRACKS = 'START_LOAD_TOP_TRACKS';\r\nexport const LOADED_TOP_TRACKS = 'LOADED_TOP_TRACKS';\r\nexport const ERROR_TOP_TRACKS = 'ERROR_TOP_TRACKS';\r\n\r\nexport const START_LOAD_ARTIST_INFO = 'START_LOAD_ARTIST_INFO';\r\nexport const LOADED_ARTIST_INFO = 'LOADED_ARTIST_INFO';\r\nexport const ERROR_ARTIST_INFO = 'ERROR_ARTIST_INFO';\r\n\r\nexport const START_LOAD_SEARCH = 'START_LOAD_SEARCH';\r\nexport const LOADED_SEARCH = 'LOADED_SEARCH';\r\nexport const ERROR_SEARCH = 'ERROR_SEARCH';\r\n","import {START_LOAD_SEARCH, LOADED_SEARCH, ERROR_SEARCH} from \"./types\";\r\n\r\nexport const getSearch = (name) => {\r\n    return dispatch => {\r\n        dispatch(getDataStarted());\r\n\r\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=track.search&track=${name}&api_key=c47452df41d75f8668f4640f376f4ee9&format=json`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getDataStarted = () => ({\r\n    type: START_LOAD_SEARCH\r\n});\r\n\r\nconst getDataSuccess = data =>({\r\n    type: LOADED_SEARCH,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = error => ({\r\n    type: ERROR_SEARCH,\r\n    payload: {\r\n        error\r\n    }\r\n});\r\n","import React from 'react';\r\nimport PuffLoader from 'react-spinners/PuffLoader';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <PuffLoader />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Spinner from \"../../Spinner/Spinner\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport \"./FoundTracks.scss\";\r\n\r\nconst FoundTracks = ({foundTracks, loading}) => {\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <Spinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"track\">\r\n            <ul className=\"track__list\">\r\n                <h6 className=\"track__head\">\r\n                    <div className=\"track__wrapper\">\r\n                        Name\r\n                    </div>\r\n\r\n                    <div>\r\n                        Artist\r\n                    </div>\r\n                </h6>\r\n\r\n                {foundTracks.hasOwnProperty('track')?\r\n                foundTracks.track.map(track => (\r\n                    <li className=\"track__item\" key={uuidv4()}>\r\n                        <div className=\"track__wrapper\">\r\n                            <a href={track.url} className=\"track__link\">\r\n                                {track.name}\r\n                            </a>\r\n                        </div>\r\n\r\n                        <Link to={`/artist/${track.artist}`} className=\"track__link\">\r\n                            {track.artist}\r\n                        </Link>\r\n                    </li>\r\n                )):\r\n                <p></p>}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FoundTracks;\r\n","import React, {useState, useCallback, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {useLocation, useHistory} from 'react-router-dom';\r\nimport {getSearch} from \"../../actions/getSearch\";\r\nimport FoundTracks from \"./FoundTracks/FoundTracks\";\r\nimport debounce from 'lodash.debounce';\r\nimport \"./Search.scss\";\r\n\r\nconst Search = ({getSearch, foundTracks, loading, error}) => {\r\n\r\n    const location = useLocation();\r\n    const urlSearchParam = new URLSearchParams(location.search);\r\n    const history = useHistory();\r\n    const [inputValue, setInputValue] = useState(urlSearchParam.get('searchQuery') || '');\r\n\r\n    const pushUrlSearchParam = (inputValue) => {\r\n        if (inputValue) {\r\n            urlSearchParam.set('searchQuery', inputValue);\r\n        } else {\r\n            urlSearchParam.delete('searchQuery');\r\n        }\r\n\r\n        history.push({\r\n            search: urlSearchParam.toString()\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSearch(inputValue);\r\n    },[]);\r\n\r\n    const debounceSearchParams = useCallback(\r\n        debounce(getSearch, 500),\r\n        [],\r\n    );\r\n\r\n    return (\r\n        <div className=\"search\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search__input\"\r\n                    value={inputValue}\r\n                    placeholder=\"Search by name\"\r\n                    onChange={(event) => {\r\n                        const value = event.target.value;\r\n                        setInputValue(value);\r\n                            pushUrlSearchParam(value);\r\n                            debounceSearchParams(value.replaceAll(' ', '+'));\r\n                    }}\r\n                />\r\n\r\n            <FoundTracks foundTracks={foundTracks} loading={loading} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getSearch: (name) => {\r\n            dispatch(getSearch(name));\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        foundTracks: state.foundTracks.foundTracks,\r\n        loading: state.foundTracks.loading,\r\n        error: state.foundTracks.error\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Search);\r\n","import React from 'react';\r\nimport './SongCard.scss';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst SongCard = ({song}) => {\r\n\r\n    return (\r\n        <div className=\"song\">\r\n            <img src={song.image[2][\"#text\"]} className=\"song__img\" alt=\"caver\"/>\r\n\r\n            <div className=\"song__wrapper\">\r\n                Name:&nbsp;\r\n                <a href={song.url} className=\"song__link\">\r\n                    {song.name}\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"song__wrapper\">\r\n                Artist:&nbsp;\r\n                <Link to={`/artist/${song.artist.name.replace(' ', '+')}`} className=\"song__link\">\r\n                    {song.artist.name}\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SongCard;\r\n","import React from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport SongCard from \"./SongCard/SongCard\";\r\nimport './Music.scss';\r\n\r\n\r\nconst Music = ({listSongs}) => {\r\n\r\n    return (\r\n        <div className=\"music\">\r\n            <ul className=\"music__list\">\r\n                {listSongs.map(song => (\r\n                    <li className=\"music__item\" key={uuidv4()}>\r\n                        <SongCard\r\n                            song={song}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;\r\n","import {START_LOAD_TOP_TRACKS, LOADED_TOP_TRACKS, ERROR_TOP_TRACKS} from \"./types\";\r\n\r\nconst urlMusic = 'https://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=c47452df41d75f8668f4640f376f4ee9&format=json';\r\n\r\nexport const getTopTracks = () => {\r\n    return dispatch => {\r\n        dispatch(getDataStarted());\r\n\r\n        fetch(urlMusic)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            });\r\n    };\r\n};\r\n\r\nconst getDataStarted = () => ({\r\n    type: START_LOAD_TOP_TRACKS\r\n});\r\n\r\nconst getDataSuccess = data => ({\r\n    type: LOADED_TOP_TRACKS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = error => ({\r\n    type: ERROR_TOP_TRACKS,\r\n    payload: {\r\n        error\r\n    }\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport Music from \"./Music/Music\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport {getTopTracks} from \"../../actions/getTopTkacks\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst HomePage = ({getTopTracks, music, loading, error}) => {\r\n\r\n    useEffect(() => {\r\n\r\n        getTopTracks();\r\n\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <Spinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Music listSongs={music}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTopTracks:() => {\r\n            dispatch(getTopTracks());\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        music: state.music.music,\r\n        loading: state.music.loading,\r\n        error: state.music.error\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomePage);\r\n\r\n","import {START_LOAD_ARTIST_INFO, LOADED_ARTIST_INFO, ERROR_ARTIST_INFO} from \"./types\";\r\n\r\n\r\nexport const getArtistInfo = (name) => {\r\n    return dispatch => {\r\n        dispatch(getDataStarted());\r\n\r\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${name}&api_key=c47452df41d75f8668f4640f376f4ee9&format=json`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            });\r\n    };\r\n};\r\n\r\nconst getDataStarted = () => ({\r\n    type: START_LOAD_ARTIST_INFO\r\n});\r\n\r\nconst getDataSuccess = data => ({\r\n    type: LOADED_ARTIST_INFO,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = error => ({\r\n    type: ERROR_ARTIST_INFO,\r\n    payload: {\r\n        error\r\n    }\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport {getArtistInfo} from \"../../actions/getArtistInfo\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport './Artist.scss';\r\n\r\n\r\nconst Artist = ({getArtistInfo, info, loading, error, ...props}) => {\r\n\r\n    useEffect(() => {\r\n\r\n        getArtistInfo(props.match.params.artistName);\r\n\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <Spinner/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"artist\">\r\n            <h1 className=\"artist__name\">{info.name}</h1>\r\n\r\n            <div className=\"artist__wrapper\">\r\n                <img src={info && info.image && info.image[1]['#text']} className=\"artist__img\" />\r\n\r\n                <ul className=\"artist__tags-list\">\r\n                    {info && info.tags && info.tags.tag.map( tag => (\r\n                        <li className=\"artist__tags-item\">\r\n                            {tag.name}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <p className=\"artist__info\" dangerouslySetInnerHTML={{__html : info && info.bio && info.bio.content}}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getArtistInfo: (name) => {\r\n            dispatch(getArtistInfo(name));\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        info: state.artist.info,\r\n        loading: state.artist.loading,\r\n        error: state.artist.error\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Artist);\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__text\">\r\n                ©2020\r\n            </div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport {\n    Switch,\n    Route\n} from 'react-router-dom';\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport Home from \"./components/Home/Home\";\nimport Artist from \"./components/Artist/Artist\";\nimport Footer from \"./components/Footer/Footer\";\nimport './App.scss';\n\nfunction App() {\n\n    return (\n        <div className=\"app\">\n            <div className=\"app__header\">\n                <Header/>\n            </div>\n\n            <div className=\"app__content\">\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        component={Home}\n                    />\n\n                    <Route\n                        path=\"/search\"\n                        component={Search}\n                    />\n\n                    <Route\n                        path=\"/artist/:artistName\"\n                        exact\n                        component={Artist}\n                    />\n                </Switch>\n            </div>\n\n            <div className=\"app__footer\">\n                <Footer/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {START_LOAD_TOP_TRACKS, LOADED_TOP_TRACKS, ERROR_TOP_TRACKS} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    music: [],\r\n    error: null\r\n};\r\n\r\nexport default function musicReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_TOP_TRACKS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case LOADED_TOP_TRACKS:\r\n               return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                music: [...state.music, ...action.payload.tracks.track]\r\n            };\r\n        case ERROR_TOP_TRACKS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import {START_LOAD_ARTIST_INFO, LOADED_ARTIST_INFO, ERROR_ARTIST_INFO} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    info: {},\r\n    error: null,\r\n};\r\n\r\nexport default function artistReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_ARTIST_INFO:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case LOADED_ARTIST_INFO:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                info: {...state.info, ...action.payload.artist}\r\n            };\r\n        case ERROR_ARTIST_INFO:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {START_LOAD_SEARCH, LOADED_SEARCH, ERROR_SEARCH} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    foundTracks: {},\r\n    error: null,\r\n};\r\n\r\nexport default  function searchReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_SEARCH:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case LOADED_SEARCH:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                foundTracks: {...state.foundTracks, ...action.payload.results.trackmatches}\r\n            };\r\n        case ERROR_SEARCH:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport musicReducer from \"./musicReducer\";\r\nimport artistReducer from \"./artistReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n    music: musicReducer,\r\n    artist: artistReducer,\r\n    foundTracks: searchReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport {createStore, applyMiddleware} from \"redux\";\n\nimport './index.scss';\nimport App from './App';\nimport combineReducers from \"./reducers/allRedusers\";\n\nconst store = createStore(combineReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}